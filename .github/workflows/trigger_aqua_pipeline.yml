name: Trigger Aqua pipeline
on:
  workflow_dispatch:
    inputs:
      pipeline_name:
        type: choice
        description: 'Pipeline to be triggered'
        required: false
        default: 'aqua'
        options:
          - 'aqua-local'
          - 'aqua-local-debug'
          - 'aqua-green'


jobs:
  trigger-webhook:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare payload
        id: prepare_payload
        run: |
          # Write the payload to a file. Use printf to avoid adding a newline.
          # TIMESTAMP="2025-02-20T23:05:24Z"
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          if [[ "${{ github.event.inputs.pipeline_name }}" == 'aqua-local' ]]; then
            printf '%s' '{"debug_mode": "false", "repo_url": "git@github.com:thunkingspot/aqua.git", "deploy_script": "mgt/deploy.sh", "container_name": "aqua-app", "timestamp": "'$TIMESTAMP'"}' > payload.json
          else if [[ "${{ github.event.inputs.pipeline_name }}" == 'aqua-local-debug' ]]; then
            printf '%s' '{"debug_mode": "true", "repo_url": "git@github.com:thunkingspot/aqua.git", "deploy_script": "mgt/deploy.sh", "container_name": "aqua-app", "timestamp": "'$TIMESTAMP'"}' > payload.json
          else [[ "${{ github.event.inputs.pipeline_name }}" == 'aqua-green' ]];
            printf '%s' '{"debug_mode": "false", "repo_url": "git@github.com:thunkingspot/aqua.git", "deploy_script": "mgt/deploy-green.sh", "container_name": "aqua-app", "timestamp": "'$TIMESTAMP'"}' > payload.json
          fi
          cat payload.json

      - name: Compute HMAC signature
        id: sign_payload
        env:
          WEBHOOK_SECRET: ${{ secrets.MGTSVR_WEBHOOK_SECRET }}
        run: |
          # Compute the HMAC SHA-256 signature in the same format GitHub webhooks use.
          SIGNATURE=$(cat payload.json | openssl dgst -sha256 -hmac "$WEBHOOK_SECRET" | awk '{print $2}')
          echo "signature=sha256=$SIGNATURE" >> $GITHUB_OUTPUT
          echo "Computed signature: sha256=$SIGNATURE"

      - name: Send webhook request
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -H "X-Hub-Signature-256: ${{ steps.sign_payload.outputs.signature }}" \
            --data @payload.json \
            --fail \
            http://34.213.80.7:5011/mgtapi
